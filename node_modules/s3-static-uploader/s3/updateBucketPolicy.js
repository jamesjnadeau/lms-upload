"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const promisify_1 = require("../utils/promisify");
function updateBucketPolicy(s3, // An initialised and configured S3 Lib
    bucketName, // The name of the bucket we want to update
    policy) {
    return __awaiter(this, void 0, void 0, function* () {
        const params = {
            Bucket: bucketName,
            Policy: JSON.stringify(policy),
        };
        return promisify_1.promisify(s3.putBucketPolicy.bind(s3))(params);
    });
}
exports.updateBucketPolicy = updateBucketPolicy;
